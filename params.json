{"name":"Beehive.View","tagline":"Simple view bindings","body":"# BeeHive.View\r\n\r\nSimple view bindings.\r\n\r\n### How to use\r\n\r\nCreate an instance of `BeeHive.View` and pass in the top level element:\r\n\r\n```javascript\r\nvar view1 = new BeeHive.View(document.getElementById('heading1'));\r\nvar view2 = new BeeHive.View(document.getElementById('heading2'));\r\n```\r\n\r\nSubscribe to certain events that fire on the view object when attributes change:\r\n\r\n```javascript\r\nfunction toggle_visibility() {\r\n  var is_visible = this.get('visibility');\r\n  this.element.style.visibility = is_visible ? 'visible' : 'hidden';\r\n}\r\nview1.on('visibility:change', toggle_visibility);\r\n```\r\n\r\nSee the DOM elements react automatically when attributes change:\r\n\r\n```javascript\r\nview1.set('visibility', false);\r\nview2.set('visibility', false);\r\nview1.set('visibility', true);\r\n```\r\n\r\nEvent names are conventional, for example when a `visibility` attribute changes, the `visibility:change` event fires.\r\n\r\n### Demo\r\n\r\nClone the repo and open `demo.html` that has the view objects mentioned above already in place so that you can play with them using your browser's console.\r\n\r\n### Features\r\n\r\n* Has no dependencies, no, not even jQuery.\r\n* It’s more lightweight than Backbone, Angular, or [insertAnyOtherFrontendFrameWork]\r\n* It’s currently less than 40 lines long.\r\n* It’s been written on a train, and trains are cool.\r\n\r\n### Todos\r\n\r\n* Write tests.\r\n* Implement `View#off`.\r\n* Make it AMD compliant\r\n* Create NPM package.\r\n* ~~Create minified version just for comedy value.~~ It's 352 bytes!\r\n* See if alternative getter/setter methods would be more suitable over time (Benchmarks at http://jsperf.com/getter-setter)\r\n\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/liquid/beehive-view/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}